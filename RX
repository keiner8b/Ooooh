local Library = {}
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

Library.flags = {}

function Library:Window(title)
    local Window = {}
    
    -- Create main GUI elements
    local ScreenGui = Instance.new("ScreenGui")
    local MainFrame = Instance.new("Frame")
    local Title = Instance.new("TextLabel")
    local TabContainer = Instance.new("Frame")
    local ContentContainer = Instance.new("Frame")
    
    -- Setup GUI properties
    ScreenGui.Parent = game.CoreGui
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    MainFrame.Name = "MainFrame"
    MainFrame.Parent = ScreenGui
    MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    MainFrame.Position = UDim2.new(0.5, -250, 0.5, -150)
    MainFrame.Size = UDim2.new(0, 500, 0, 300)
    MainFrame.ClipsDescendants = true
    
    Title.Name = "Title"
    Title.Parent = MainFrame
    Title.BackgroundTransparency = 1
    Title.Size = UDim2.new(1, 0, 0, 30)
    Title.Font = Enum.Font.GothamBold
    Title.Text = title
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.TextSize = 16
    
    TabContainer.Name = "TabContainer"
    TabContainer.Parent = MainFrame
    TabContainer.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    TabContainer.Position = UDim2.new(0, 0, 0, 30)
    TabContainer.Size = UDim2.new(0, 120, 1, -30)
    
    ContentContainer.Name = "ContentContainer"
    ContentContainer.Parent = MainFrame
    ContentContainer.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    ContentContainer.Position = UDim2.new(0, 120, 0, 30)
    ContentContainer.Size = UDim2.new(1, -120, 1, -30)
    
    -- Make window draggable
    local dragging
    local dragInput
    local dragStart
    local startPos
    
    local function update(input)
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
    
    Title.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
        end
    end)
    
    Title.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    Title.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
    
    function Window:Tab(name)
        local Tab = {}
        
        local TabButton = Instance.new("TextButton")
        local TabContent = Instance.new("ScrollingFrame")
        
        TabButton.Name = name
        TabButton.Parent = TabContainer
        TabButton.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
        TabButton.Size = UDim2.new(1, 0, 0, 30)
        TabButton.Font = Enum.Font.Gotham
        TabButton.Text = name
        TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        TabButton.TextSize = 14
        
        TabContent.Name = name.."Content"
        TabContent.Parent = ContentContainer
        TabContent.BackgroundTransparency = 1
        TabContent.Size = UDim2.new(1, 0, 1, 0)
        TabContent.ScrollBarThickness = 4
        TabContent.Visible = false
        
        TabButton.MouseButton1Click:Connect(function()
            for _, content in pairs(ContentContainer:GetChildren()) do
                content.Visible = false
            end
            TabContent.Visible = true
        end)
        
        function Tab:Section(name, isFirst)
            local Section = {}
            local SectionContainer = Instance.new("Frame")
            local SectionTitle = Instance.new("TextLabel")
            local ElementContainer = Instance.new("Frame")
            
            SectionContainer.Name = name.."Section"
            SectionContainer.Parent = TabContent
            SectionContainer.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
            SectionContainer.Size = UDim2.new(1, -20, 0, 30)
            SectionContainer.Position = UDim2.new(0, 10, 0, #TabContent:GetChildren() * 35)
            
            SectionTitle.Name = "Title"
            SectionTitle.Parent = SectionContainer
            SectionTitle.BackgroundTransparency = 1
            SectionTitle.Size = UDim2.new(1, 0, 0, 30)
            SectionTitle.Font = Enum.Font.GothamBold
            SectionTitle.Text = name
            SectionTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            SectionTitle.TextSize = 14
            
            ElementContainer.Name = "Elements"
            ElementContainer.Parent = SectionContainer
            ElementContainer.BackgroundTransparency = 1
            ElementContainer.Position = UDim2.new(0, 0, 0, 30)
            ElementContainer.Size = UDim2.new(1, 0, 0, 0)
            
            if isFirst then
                TabContent.Visible = true
            end
            
            function Section:Toggle(name, flag, default, callback)
                local Toggle = Instance.new("TextButton")
                local Status = Instance.new("Frame")
                
                Toggle.Name = name
                Toggle.Parent = ElementContainer
                Toggle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
                Toggle.Size = UDim2.new(1, -20, 0, 30)
                Toggle.Position = UDim2.new(0, 10, 0, #ElementContainer:GetChildren() * 35)
                Toggle.Font = Enum.Font.Gotham
                Toggle.Text = name
                Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
                Toggle.TextSize = 14
                
                Status.Name = "Status"
                Status.Parent = Toggle
                Status.BackgroundColor3 = default and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
                Status.Position = UDim2.new(1, -35, 0.5, -5)
                Status.Size = UDim2.new(0, 25, 0, 10)
                
                Library.flags[flag] = default
                
                Toggle.MouseButton1Click:Connect(function()
                    Library.flags[flag] = not Library.flags[flag]
                    Status.BackgroundColor3 = Library.flags[flag] and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
                    if callback then
                        callback(Library.flags[flag])
                    end
                end)
            end
            
            function Section:Button(name, callback)
                local Button = Instance.new("TextButton")
                
                Button.Name = name
                Button.Parent = ElementContainer
                Button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
                Button.Size = UDim2.new(1, -20, 0, 30)
                Button.Position = UDim2.new(0, 10, 0, #ElementContainer:GetChildren() * 35)
                Button.Font = Enum.Font.Gotham
                Button.Text = name
                Button.TextColor3 = Color3.fromRGB(255, 255, 255)
                Button.TextSize = 14
                
                Button.MouseButton1Click:Connect(callback)
            end
            
            function Section:Slider(name, flag, default, min, max, decimal, callback)
                local Slider = Instance.new("Frame")
                local Title = Instance.new("TextLabel")
                local SliderBar = Instance.new("Frame")
                local Fill = Instance.new("Frame")
                local Value = Instance.new("TextLabel")
                
                Slider.Name = name
                Slider.Parent = ElementContainer
                Slider.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
                Slider.Size = UDim2.new(1, -20, 0, 45)
                Slider.Position = UDim2.new(0, 10, 0, #ElementContainer:GetChildren() * 35)
                
                Title.Name = "Title"
                Title.Parent = Slider
                Title.BackgroundTransparency = 1
                Title.Size = UDim2.new(1, 0, 0, 20)
                Title.Font = Enum.Font.Gotham
                Title.Text = name
                Title.TextColor3 = Color3.fromRGB(255, 255, 255)
                Title.TextSize = 14
                
                SliderBar.Name = "SliderBar"
                SliderBar.Parent = Slider
                SliderBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                SliderBar.Position = UDim2.new(0, 10, 0, 25)
                SliderBar.Size = UDim2.new(1, -60, 0, 5)
                
                Fill.Name = "Fill"
                Fill.Parent = SliderBar
                Fill.BackgroundColor3 = Color3.fromRGB(0, 162, 255)
                Fill.Size = UDim2.new((default - min)/(max - min), 0, 1, 0)
                
                Value.Name = "Value"
                Value.Parent = Slider
                Value.BackgroundTransparency = 1
                Value.Position = UDim2.new(1, -45, 0, 20)
                Value.Size = UDim2.new(0, 35, 0, 15)
                Value.Font = Enum.Font.Gotham
                Value.Text = tostring(default)
                Value.TextColor3 = Color3.fromRGB(255, 255, 255)
                Value.TextSize = 12
                
                Library.flags[flag] = default
                
                local function updateSlider(input)
                    local pos = UDim2.new(math.clamp((input.Position.X - SliderBar.AbsolutePosition.X) / SliderBar.AbsoluteSize.X, 0, 1), 0, 1, 0)
                    Fill.Size = pos
                    
                    local value = math.floor((((pos.X.Scale * max) / max) * (max - min) + min) * (10 ^ decimal)) / (10 ^ decimal)
                    Value.Text = tostring(value)
                    Library.flags[flag] = value
                    
                    if callback then
                        callback(value)
                    end
                end
                
                SliderBar.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        local connection
                        connection = UserInputService.InputChanged:Connect(function(input)
                            if input.UserInputType == Enum.UserInputType.MouseMovement then
                                updateSlider(input)
                            end
                        end)
                        
                        UserInputService.InputEnded:Connect(function(input)
                            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                                connection:Disconnect()
                            end
                        end)
                        
                        updateSlider(input)
                    end
                end)
            end
            
            function Section:Dropdown(name, flag, options)
                local Dropdown = Instance.new("Frame")
                local Title = Instance.new("TextLabel")
                local DropButton = Instance.new("TextButton")
                local OptionContainer = Instance.new("Frame")
                
                Dropdown.Name = name
                Dropdown.Parent = ElementContainer
                Dropdown.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
                Dropdown.Size = UDim2.new(1, -20, 0, 60)
                Dropdown.Position = UDim2.new(0, 10, 0, #ElementContainer:GetChildren() * 35)
                
                Title.Name = "Title"
                Title.Parent = Dropdown
                Title.BackgroundTransparency = 1
                Title.Size = UDim2.new(1, 0, 0, 20)
                Title.Font = Enum.Font.Gotham
                Title.Text = name
                Title.TextColor3 = Color3.fromRGB(255, 255, 255)
                Title.TextSize = 14
                
                DropButton.Name = "DropButton"
                DropButton.Parent = Dropdown
                DropButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
                DropButton.Position = UDim2.new(0, 10, 0, 25)
                DropButton.Size = UDim2.new(1, -20, 0, 25)
                DropButton.Font = Enum.Font.Gotham
                DropButton.Text = "Select"
                DropButton.TextColor3 = Color3.fromRGB(255, 255, 255)
                DropButton.TextSize = 14
                
                OptionContainer.Name = "OptionContainer"
                OptionContainer.Parent = Dropdown
                OptionContainer.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
                OptionContainer.Position = UDim2.new(0, 10, 0, 55)
                OptionContainer.Size = UDim2.new(1, -20, 0, 0)
                OptionContainer.Visible = false
                OptionContainer.ClipsDescendants = true
                
                local isOpen = false
                
                DropButton.MouseButton1Click:Connect(function()
                    isOpen = not isOpen
                    OptionContainer.Visible = isOpen
                    Dropdown.Size = isOpen and UDim2.new(1, -20, 0, 60 + (#options * 25)) or UDim2.new(1, -20, 0, 60)
                end)
                
                for i, option in pairs(options) do
                    local Option = Instance.new("TextButton")
                    
                    Option.Name = option
                    Option.Parent = OptionContainer
                    Option.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                    Option.Size = UD
                    Option.Name = option
                    Option.Parent = OptionContainer
                    Option.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                    Option.Size = UDim2.new(1, 0, 0, 25)
                    Option.Position = UDim2.new(0, 0, 0, (i-1) * 25)
                    Option.Font = Enum.Font.Gotham
                    Option.Text = option
                    Option.TextColor3 = Color3.fromRGB(255, 255, 255)
                    Option.TextSize = 14
                    
                    Option.MouseButton1Click:Connect(function()
                        Library.flags[flag] = option
                        DropButton.Text = option
                        isOpen = false
                        OptionContainer.Visible = false
                        Dropdown.Size = UDim2.new(1, -20, 0, 60)
                    end)
                end
                
                return {
                    AddOption = function(self, option)
                        local Option = Instance.new("TextButton")
                        
                        Option.Name = option
                        Option.Parent = OptionContainer
                        Option.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                        Option.Size = UDim2.new(1, 0, 0, 25)
                        Option.Position = UDim2.new(0, 0, 0, (#OptionContainer:GetChildren() - 1) * 25)
                        Option.Font = Enum.Font.Gotham
                        Option.Text = option
                        Option.TextColor3 = Color3.fromRGB(255, 255, 255)
                        Option.TextSize = 14
                        
                        Option.MouseButton1Click:Connect(function()
                            Library.flags[flag] = option
                            DropButton.Text = option
                            isOpen = false
                            OptionContainer.Visible = false
                            Dropdown.Size = UDim2.new(1, -20, 0, 60)
                        end)
                    end,
                    
                    RemoveOption = function(self, option)
                        local optionButton = OptionContainer:FindFirstChild(option)
                        if optionButton then
                            optionButton:Destroy()
                            -- Reposition remaining options
                            local yOffset = 0
                            for _, child in pairs(OptionContainer:GetChildren()) do
                                child.Position = UDim2.new(0, 0, 0, yOffset)
                                yOffset = yOffset + 25
                            end
                        end
                    end
                }
            end

            function Section:Label(text)
                local Label = Instance.new("TextLabel")
                
                Label.Name = "Label"
                Label.Parent = ElementContainer
                Label.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
                Label.Size = UDim2.new(1, -20, 0, 30)
                Label.Position = UDim2.new(0, 10, 0, #ElementContainer:GetChildren() * 35)
                Label.Font = Enum.Font.Gotham
                Label.Text = text
                Label.TextColor3 = Color3.fromRGB(255, 255, 255)
                Label.TextSize = 14
            end
            
            ElementContainer.Size = UDim2.new(1, 0, 0, #ElementContainer:GetChildren() * 35)
            SectionContainer.Size = UDim2.new(1, -20, 0, ElementContainer.Size.Y.Offset + 35)
            TabContent.CanvasSize = UDim2.new(0, 0, 0, TabContent.CanvasSize.Y.Offset + SectionContainer.Size.Y.Offset + 10)
            
            return Section
        end
        
        return Tab
    end
    
    return Window
end

-- Create locale table for multilingual support
local Locale = {
    Ohio = "Ohio",
    Player = "Player",
    Gravity = "Gravity",
    Boost = "Speed Boost",
    Fly = "Fly",
    InfJump = "Infinite Jump",
    Noclip = "Noclip",
    Interact = "Interaction",
    Fast = "Fast Interact",
    Item = "Item",
    Teleport = "Teleport",
    Get = "Auto Get",
    Buy = "Buy Item",
    Hit = "Hit",
    Aura = "Aura",
    All = "Hit All",
    Kill = "Kill",
    Loop = "Loop",
    Auto = "Auto",
    Clean = "Auto Clean",
    ESP = "ESP",
    Other = "Other",
    FullBright = "Full Bright",
    AFK = "Anti AFK",
    About = "About",
    By = "Created by Assistant",
    Copy = "Copy Discord",
    Link = "https://discord.gg/example"
}

return Library, Locale
